<?php

namespace ContainerAahIGl2;

use Closure;
use Symfony\Bridge\Monolog\Command\ServerLogCommand;
use Symfony\Component\Console\Command\LazyCommand;
use function dirname;
use const DIRECTORY_SEPARATOR;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_Monolog_Command_ServerLog_LazyService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.monolog.command.server_log.lazy' shared service.
     *
     * @return LazyCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once dirname(__DIR__, 4) . '' . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'symfony' . DIRECTORY_SEPARATOR . 'console' . DIRECTORY_SEPARATOR . 'Command' . DIRECTORY_SEPARATOR . 'Command.php';
        include_once dirname(__DIR__, 4) . '' . DIRECTORY_SEPARATOR . 'vendor' . DIRECTORY_SEPARATOR . 'symfony' . DIRECTORY_SEPARATOR . 'console' . DIRECTORY_SEPARATOR . 'Command' . DIRECTORY_SEPARATOR . 'LazyCommand.php';

        return $container->privates['.monolog.command.server_log.lazy'] = new LazyCommand('server:log', [], 'Start a log server that displays logs in real time', false, #[Closure(name: 'monolog.command.server_log', class: 'Symfony\\Bridge\\Monolog\\Command\\ServerLogCommand')] function () use ($container): ServerLogCommand {
            return ($container->privates['monolog.command.server_log'] ?? $container->load('getMonolog_Command_ServerLogService'));
        });
    }
}
